openapi: 3.0.0
info:
  title: Users
  description: Learning to swagger
  termsOfService: https://www.bbc.co.uk/sport
  contact:
    name: Alex
    url: https://www.bbc.co.uk/sport
    email: alexlewis374@gmail.com
  license:
    name: Me
  version: "1"
servers:
- url: https://virtserver.swaggerhub.com/alexlewis/swagger/1
  description: SwaggerHub API Auto Mocking
- url: https://virtserver.swaggerhub.com/alexlewis/swagger/v1
  description: SwaggerHub API Auto Mocking
paths:
  /user:
    get:
      description: Get info about a user
      parameters:
      - name: id
        in: query
        description: The id of the user
        required: false
        style: form
        explode: true
        schema:
          maximum: 10
          minimum: 1
          type: integer
          example: 2
      - name: name
        in: query
        description: The name of the user
        required: false
        style: form
        explode: true
        schema:
          maxLength: 50
          minLength: 1
          type: string
          example: Dave
      responses:
        "200":
          description: Successful pull of user info
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/inline_response_200'
    post:
      description: Creates a new user in the database
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body'
        required: true
      responses:
        "200":
          description: Successfully addeda new user to the database
  /users/{id}:
    get:
      description: Obtain info on specific user
      parameters:
      - name: id
        in: path
        description: The id of the user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 22
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
components:
  schemas:
    inline_response_200:
      properties:
        id:
          type: integer
          example: 4
        name:
          type: string
          example: Nigel
    body:
      type: object
      properties:
        id:
          type: integer
          example: 4
        name:
          type: string
          example: Nigel
    inline_response_200_1:
      type: object
      properties:
        id:
          type: integer
          example: 22
        name:
          type: string
          example: Dave
